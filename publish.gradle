/**
 * 发布说明：
 * Step-1: 打包AAR 的 assemble命令
 * Step-2：发布AAR 的 publishMavenLibraryPublicationToSonatypeMavencentralRepository 命令
 * Step-3：登录新版Nexus Repository Manager(https://s01.oss.sonatype.org/#welcome)，
 *         在左侧Staging Repositories页面（标注1）找到自己的group id，选中，就能看到提交的信息.
 * Step-4:一般2个小时后可以在https://search.maven.org/查询发布结果
 */

//Maven Publish Plugin  https://docs.gradle.org/current/userguide/publishing_maven.html
apply plugin: 'maven-publish'

task clearJar(type: Delete) {
    // 删除libs目录数据
    //delete 'build/libs/'
    // 有选择性的删除
    FileTree tree = fileTree("build/libs/")
    tree.visit {
        element ->
            if (element.getName().endsWith(".jar") &&
                    !element.getName().contains("javadoc") &&
                    !element.getName().contains("sources")) {
                println "$element.file.name" + " " + element.getName()
                delete element.file
            }
    }
}

// 打源码jar包的task
task androidSourcesJar(type: Jar) {

    classifier = 'sources'
    from android.sourceSets.main.java.source

    exclude "**/R.class"
    exclude "**/BuildConfig.class"
}
def jarGroup = "jars"
androidSourcesJar.setGroup(jarGroup)

ext {
    PUBLISH_ARTIFACT_ID = "kangaroo"
    PUBLISH_GROUP_ID = 'io.github.kivensolo'
    PUBLISH_VERSION = '1.0.10' //1.0.10-SNAPSHOT 表示快照版本
}

ext["signing.keyId"] = ''
ext["signing.password"] = ''
ext["signing.secretKeyRingFile"] = ''
ext["ossrhUsername"] = ''
ext["ossrhPassword"] = ''

File secretPropsFile = project.rootProject.file('/publish/secretPropFile')
if (secretPropsFile.exists()) {
    println "Found secret props file, loading props"
    Properties p = new Properties()
    p.load(new FileInputStream(secretPropsFile))
    p.each { name, value ->
        println "  dump props ----> $name : $value"
        ext[name] = value
    }
} else {
    println "No props file, loading env vars"
}


afterEvaluate {
    publishing {
        // maven-public 插件提供了publications类型的maven发布，详细查看：
        // https://docs.gradle.org/current/userguide/publishing_maven.html
        // https://docs.gradle.org/current/userguide/dependency_management_terminology.html#sub:terminology_publication
        publications {

            // Creates a Maven publication called "release".
            release(MavenPublication) {
                // Applies the component for the release build variant.
                from components.release

                // A: Maven publication的标准元数据设置
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID  // 依赖库的名称（jitpack 都不会使用到）
                version PUBLISH_VERSION         // jitpack不会使用到，只是我们开发者自己查看

                // B: Custom Artifacts 源码
                artifact androidSourcesJar

                // C: 自定义POM文件
                // https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPom.html
                pom {
                    // --------- Properties Start
                    name = PUBLISH_ARTIFACT_ID
                    description = 'An agile development library'
                    // If your project has a dedicated site, use its URL here
                    url = 'https://github.com/kivensolo/AKangaroo'
                    // --------- Properties End
                    licenses { //配置此POM表示的发布许可证
                        license {
                            //协议类型，一般默认Apache License2.0的话不用改：
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers { //发布配置开发人员信息
                        developer {
                            id = 'KingZ'
                            name = 'KingZ'
                            email = '760553478@qq.com'
                        }
                    }
                }
            }

            // Creates a Maven publication called “debug”.
            debug(MavenPublication){
                from components.debug
                groupId PUBLISH_GROUP_ID
                artifactId PUBLISH_ARTIFACT_ID + "-debug"  // 依赖库的名称（jitpack 都不会使用到）
                version PUBLISH_VERSION         // jitpack不会使用到，只是我们开发者自己查看

//                artifact("$buildDir/outputs/aar/${project.getName()}-release.aar") // 加了这个要报错
                artifact androidSourcesJar

                // https://docs.gradle.org/current/dsl/org.gradle.api.publish.maven.MavenPom.html
                pom {
                    // --------- Properties Start
                    name = PUBLISH_ARTIFACT_ID
                    description = 'An agile development library'
                    // If your project has a dedicated site, use its URL here
                    url = 'https://github.com/kivensolo/AKangaroo'
                    // --------- Properties End
                    licenses { //配置此POM表示的发布许可证
                        license {
                            //协议类型，一般默认Apache License2.0的话不用改：
                            name = 'The Apache License, Version 2.0'
                            url = 'http://www.apache.org/licenses/LICENSE-2.0.txt'
                        }
                    }
                    developers { //发布配置开发人员信息
                        developer {
                            id = 'KingZ'
                            name = 'KingZ'
                            email = '760553478@qq.com'
                        }
                    }
                }
            }
        }
    }
}
