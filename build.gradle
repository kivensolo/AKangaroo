// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        kotlin_version = "1.4.31"
    }
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url "https://jitpack.io" }
        mavenCentral()
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.6.4'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:1.4.31"
    }
}

allprojects {
    repositories {
        maven { url 'http://maven.aliyun.com/nexus/content/groups/public/' }
        maven { url 'https://maven.aliyun.com/repository/google' }
        maven { url 'https://maven.aliyun.com/repository/jcenter' }
        maven { url "https://jitpack.io" }
    }

    tasks.withType(Javadoc) {
        //方法上忽略@return和@param注解未添加说明注释
        options.addStringOption('Xdoclint:none', '-quiet')
//        options.addStringOption('encoding', 'UTF-8')
//        options.addStringOption('charSet', 'UTF-8')
        options {
            encoding "UTF-8"
            charSet 'UTF-8'
            links "http://docs.oracle.com/javase/7/docs/api"
        }
    }
    /** lint编译配置 **/
    gradle.projectsEvaluated {
        tasks.withType(JavaCompile) {
            options.encoding = "UTF-8"
//            "-Xlint:none"

//            options.compilerArgs << "-Xlint:unchecked" << "-Xlint:deprecation"
            // Try to turn them all off automatically
            options.compilerArgs << '-Xlint:none'
            options.compilerArgs << '-nowarn' // same as '-Xlint:none'

            // Turn them off manually
//            options.compilerArgs << '-Xlint:-auxiliaryclass'
//            options.compilerArgs << '-Xlint:-cast'
//            options.compilerArgs << '-Xlint:-classfile'
//            options.compilerArgs << '-Xlint:-deprecation'
//            options.compilerArgs << '-Xlint:-dep-ann'
//            options.compilerArgs << '-Xlint:-divzero'
//            options.compilerArgs << '-Xlint:-empty'
//            options.compilerArgs << '-Xlint:-fallthrough'
//            options.compilerArgs << '-Xlint:-finally'
//            options.compilerArgs << '-Xlint:-options'
//            options.compilerArgs << '-Xlint:-overloads'
//            options.compilerArgs << '-Xlint:-overrides'
//            options.compilerArgs << '-Xlint:-path'
//            options.compilerArgs << '-Xlint:-processing'
//            options.compilerArgs << '-Xlint:-rawtypes'
//            options.compilerArgs << '-Xlint:-serial'
//            options.compilerArgs << '-Xlint:-static'
//            options.compilerArgs << '-Xlint:-try'
//            options.compilerArgs << '-Xlint:-unchecked'
//            options.compilerArgs << '-Xlint:-varargs'
        }
    }
}

task clean(type: Delete) {
    delete rootProject.buildDir
}
